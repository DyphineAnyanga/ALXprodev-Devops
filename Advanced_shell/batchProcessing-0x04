#!/bin/bash
# batchProcessing-0x04: Fetch Pok√©mon data in parallel with job management

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API="https://pokeapi.co/api/v2/pokemon"
OUTDIR="pokemon_data_parallel"
LOGFILE="parallel_errors.log"

mkdir -p "$OUTDIR"
: > "$LOGFILE"

# Define function to fetch data
fetch_pokemon() {
  local NAME="$1"
  echo "Fetching $NAME..."
  curl -s --fail "$API/$NAME" -o "$OUTDIR/$NAME.json"
  if [ $? -eq 0 ]; then
    echo "‚úÖ $NAME saved"
  else
    echo "‚ùå Failed to fetch $NAME" | tee -a "$LOGFILE"
  fi
}

# Launch background jobs
for NAME in "${POKEMONS[@]}"; do
  fetch_pokemon "$NAME" &
done

# Show running background jobs
echo -e "\nüìã Listing background jobs:"
jobs

# Wait for all to finish
echo -e "\n‚è≥ Waiting for all background jobs to finish..."
wait
echo "‚úÖ All background fetches complete."

# Demonstrate process management by killing an inactive process (example)
sleep 100 &
SLEEP_PID=$!
echo -e "\nüí§ Started dummy sleep process with PID: $SLEEP_PID"
jobs
kill "$SLEEP_PID"
echo "üõë Killed dummy process $SLEEP_PID"
